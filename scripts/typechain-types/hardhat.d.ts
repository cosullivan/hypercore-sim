/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "HyperCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HyperCore__factory>;
    getContractFactory(
      name: "HyperCoreLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HyperCoreLib__factory>;
    getContractFactory(
      name: "HyperCorePrecompiles",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HyperCorePrecompiles__factory>;
    getContractFactory(
      name: "HyperCoreSystem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HyperCoreSystem__factory>;
    getContractFactory(
      name: "HyperCoreWrite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HyperCoreWrite__factory>;
    getContractFactory(
      name: "L1Read",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L1Read__factory>;
    getContractFactory(
      name: "L1Write",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L1Write__factory>;
    getContractFactory(
      name: "SpotERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SpotERC20__factory>;

    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "HyperCore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HyperCore>;
    getContractAt(
      name: "HyperCoreLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HyperCoreLib>;
    getContractAt(
      name: "HyperCorePrecompiles",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HyperCorePrecompiles>;
    getContractAt(
      name: "HyperCoreSystem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HyperCoreSystem>;
    getContractAt(
      name: "HyperCoreWrite",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HyperCoreWrite>;
    getContractAt(
      name: "L1Read",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.L1Read>;
    getContractAt(
      name: "L1Write",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.L1Write>;
    getContractAt(
      name: "SpotERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SpotERC20>;

    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "HyperCore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HyperCore>;
    deployContract(
      name: "HyperCoreLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HyperCoreLib>;
    deployContract(
      name: "HyperCorePrecompiles",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HyperCorePrecompiles>;
    deployContract(
      name: "HyperCoreSystem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HyperCoreSystem>;
    deployContract(
      name: "HyperCoreWrite",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HyperCoreWrite>;
    deployContract(
      name: "L1Read",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.L1Read>;
    deployContract(
      name: "L1Write",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.L1Write>;
    deployContract(
      name: "SpotERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SpotERC20>;

    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "HyperCore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HyperCore>;
    deployContract(
      name: "HyperCoreLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HyperCoreLib>;
    deployContract(
      name: "HyperCorePrecompiles",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HyperCorePrecompiles>;
    deployContract(
      name: "HyperCoreSystem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HyperCoreSystem>;
    deployContract(
      name: "HyperCoreWrite",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HyperCoreWrite>;
    deployContract(
      name: "L1Read",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.L1Read>;
    deployContract(
      name: "L1Write",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.L1Write>;
    deployContract(
      name: "SpotERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SpotERC20>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
