/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  HyperCoreLib,
  HyperCoreLibInterface,
} from "../../contracts/HyperCoreLib";

const _abi = [
  {
    inputs: [],
    name: "KNOWN_TOKEN_HYPE",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "KNOWN_TOKEN_USDC",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460175760909081601c823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c908163217e9eb91460475750633cbae38014602f575f80fd5b5f36600319011260435760206040515f8152f35b5f80fd5b5f36600319011260435780609660209252f3fea2646970667358221220836f5208554f0f664f85c4680f860b7648b8ddb955f53cdb23bcc74d774b7b0664736f6c634300081c0033";

type HyperCoreLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HyperCoreLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HyperCoreLib__factory extends ContractFactory {
  constructor(...args: HyperCoreLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HyperCoreLib & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HyperCoreLib__factory {
    return super.connect(runner) as HyperCoreLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HyperCoreLibInterface {
    return new Interface(_abi) as HyperCoreLibInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HyperCoreLib {
    return new Contract(address, _abi, runner) as unknown as HyperCoreLib;
  }
}
