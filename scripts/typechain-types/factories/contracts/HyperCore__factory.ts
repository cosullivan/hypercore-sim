/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { HyperCore, HyperCoreInterface } from "../../contracts/HyperCore";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "bits",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintDowncast",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "deploySpotERC20",
    outputs: [
      {
        internalType: "contract SpotERC20",
        name: "spot",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "deserializeWithdrawRequest",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "amount",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "lockedUntilTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct HyperCore.WithdrawRequest",
        name: "request",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_wei",
        type: "uint64",
      },
    ],
    name: "executeCDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_wei",
        type: "uint64",
      },
    ],
    name: "executeCWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "executeNativeTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "token",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_wei",
        type: "uint64",
      },
    ],
    name: "executeSpot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_wei",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "isUndelegate",
        type: "bool",
      },
    ],
    name: "executeTokenDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "token",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "executeTokenTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ntl",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "toPerp",
        type: "bool",
      },
    ],
    name: "executeUsdClassTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isDeposit",
        type: "bool",
      },
      {
        internalType: "uint64",
        name: "usd",
        type: "uint64",
      },
    ],
    name: "executeVaultTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flushCWithdrawQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "forceAccountCreation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lockedUntilTimestamp",
        type: "uint64",
      },
    ],
    name: "forceDelegation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "usd",
        type: "uint64",
      },
    ],
    name: "forcePerp",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "token",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_wei",
        type: "uint64",
      },
    ],
    name: "forceSpot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_wei",
        type: "uint64",
      },
    ],
    name: "forceStaking",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "usd",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lockedUntilTimestamp",
        type: "uint64",
      },
    ],
    name: "forceVaultEquity",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "readDelegation",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "validator",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "amount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lockedUntilTimestamp",
            type: "uint64",
          },
        ],
        internalType: "struct L1Read.Delegation",
        name: "delegation",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "readDelegations",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "validator",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "amount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lockedUntilTimestamp",
            type: "uint64",
          },
        ],
        internalType: "struct L1Read.Delegation[]",
        name: "userDelegations",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "readDelegatorSummary",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "delegated",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "undelegated",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "totalPendingWithdrawal",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nPendingWithdrawals",
            type: "uint64",
          },
        ],
        internalType: "struct L1Read.DelegatorSummary",
        name: "summary",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "perp",
        type: "uint16",
      },
    ],
    name: "readPosition",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "szi",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "entryNtl",
            type: "uint64",
          },
          {
            internalType: "int64",
            name: "isolatedRawUsd",
            type: "int64",
          },
          {
            internalType: "uint32",
            name: "leverage",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isIsolated",
            type: "bool",
          },
        ],
        internalType: "struct L1Read.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "token",
        type: "uint64",
      },
    ],
    name: "readSpotBalance",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "total",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "hold",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "entryNtl",
            type: "uint64",
          },
        ],
        internalType: "struct L1Read.SpotBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "token",
        type: "uint32",
      },
    ],
    name: "readTokenInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint64[]",
            name: "spots",
            type: "uint64[]",
          },
          {
            internalType: "uint64",
            name: "deployerTradingFeeShare",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "deployer",
            type: "address",
          },
          {
            internalType: "address",
            name: "evmContract",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "szDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "weiDecimals",
            type: "uint8",
          },
          {
            internalType: "int8",
            name: "evmExtraWeiDecimals",
            type: "int8",
          },
        ],
        internalType: "struct L1Read.TokenInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "readUserVaultEquity",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "equity",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lockedUntilTimestamp",
            type: "uint64",
          },
        ],
        internalType: "struct L1Read.UserVaultEquity",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "readWithdrawable",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "withdrawable",
            type: "uint64",
          },
        ],
        internalType: "struct L1Read.Withdrawable",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint64[]",
            name: "spots",
            type: "uint64[]",
          },
          {
            internalType: "uint64",
            name: "deployerTradingFeeShare",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "deployer",
            type: "address",
          },
          {
            internalType: "address",
            name: "evmContract",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "szDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "weiDecimals",
            type: "uint8",
          },
          {
            internalType: "int8",
            name: "evmExtraWeiDecimals",
            type: "int8",
          },
        ],
        internalType: "struct L1Read.TokenInfo",
        name: "tokenInfo",
        type: "tuple",
      },
    ],
    name: "registerTokenInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "registerValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "amount",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "lockedUntilTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct HyperCore.WithdrawRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "serializeWithdrawRequest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type HyperCoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HyperCoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HyperCore__factory extends ContractFactory {
  constructor(...args: HyperCoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HyperCore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HyperCore__factory {
    return super.connect(runner) as HyperCore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HyperCoreInterface {
    return new Interface(_abi) as HyperCoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HyperCore {
    return new Contract(address, _abi, runner) as unknown as HyperCore;
  }
}
